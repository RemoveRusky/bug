/********************************************************************************\
**                                                                              **
**  Copyright (C) 2008 Josh Ventura                                             **
**                                                                              **
**  This file is a part of the ENIGMA Development Environment.                  **
**                                                                              **
**                                                                              **
**  ENIGMA is free software: you can redistribute it and/or modify it under the **
**  terms of the GNU General Public License as published by the Free Software   **
**  Foundation, version 3 of the license or any later version.                  **
**                                                                              **
**  This application and its source code is distributed AS-IS, WITHOUT ANY      **
**  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   **
**  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       **
**  details.                                                                    **
**                                                                              **
**  You should have recieved a copy of the GNU General Public License along     **
**  with this code. If not, see <http://www.gnu.org/licenses/>                  **
**                                                                              **
**  ENIGMA is an environment designed to create games and other programs with a **
**  high-level, fully compilable language. Developers of ENIGMA or anything     **
**  associated with ENIGMA are in no way responsible for its users or           **
**  applications created by its users, or damages caused by the environment     **
**  or programs made in the environment.                                        **
**                                                                              **
\********************************************************************************/

//This file was generated by the ENIGMA Development Environment.
//Editing it is a sign of a certain medical condition. We're not sure which one.


#define log_xor || log_xor_helper() ||
struct log_xor_helper { bool value; };
template<typename LEFT> log_xor_helper operator ||(const LEFT &left, const log_xor_helper &xorh) { log_xor_helper nxor; nxor.value = (bool)left; return nxor; }
template<typename RIGHT> bool operator ||(const log_xor_helper &xorh, const RIGHT &right) { return xorh.value ^ (bool)right; }

variant enigma::OBJ_obj_60::myevent_step()
{
  { if (timeline_running && timeline_speed!=0) advance_curr_timeline(); }

  {
    with((id))
    {
      enigma::varaccess_o(int(self))= 4;
      cons_show_message(toString(enigma::varaccess_o(int(self))));
      
    }
    
  }
  ;
  
  return 0;
}
inline bool enigma::OBJ_obj_60::myevent_draw_subcheck()
{
  return (visible);

}
bool enigma::OBJ_obj_60::can_cast(int obj) const {
  return false;
}

variant enigma::OBJ_obj_61::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
  }
  ;
  
  return 0;
}
inline bool enigma::OBJ_obj_61::myevent_draw_subcheck()
{
  return (visible);

}
bool enigma::OBJ_obj_61::can_cast(int obj) const {
  return false;
}

namespace enigma
{
  callable_script callable_scripts[] = {
  };
  
  void constructor(object_basic* instance_b) {
    //This is the universal create event code
    object_locals* instance = (object_locals*)instance_b;
    
    instance->xstart = instance->x;
    instance->ystart = instance->y;
    instance->xprevious = instance->x;
    instance->yprevious = instance->y;
    
    instance->gravity=0;
    instance->gravity_direction=270;
    instance->friction=0;
    
    
    instance->timeline_index = -1;
    instance->timeline_running = false;
    instance->timeline_speed = 1;
    instance->timeline_position = 0;
    instance->timeline_loop = false;
    
    instance->image_alpha = 1.0;
    instance->image_angle = 0;
    instance->image_blend = 0xFFFFFF;
    instance->image_index = 0;
    instance->image_speed  = 1;
    instance->image_xscale = 1;
    instance->image_yscale = 1;
    
    instancecount++;
    instance_count++;
  }
}
