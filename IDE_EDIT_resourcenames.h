/********************************************************************************\
**                                                                              **
**  Copyright (C) 2008 Josh Ventura                                             **
**                                                                              **
**  This file is a part of the ENIGMA Development Environment.                  **
**                                                                              **
**                                                                              **
**  ENIGMA is free software: you can redistribute it and/or modify it under the **
**  terms of the GNU General Public License as published by the Free Software   **
**  Foundation, version 3 of the license or any later version.                  **
**                                                                              **
**  This application and its source code is distributed AS-IS, WITHOUT ANY      **
**  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   **
**  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       **
**  details.                                                                    **
**                                                                              **
**  You should have recieved a copy of the GNU General Public License along     **
**  with this code. If not, see <http://www.gnu.org/licenses/>                  **
**                                                                              **
**  ENIGMA is an environment designed to create games and other programs with a **
**  high-level, fully compilable language. Developers of ENIGMA or anything     **
**  associated with ENIGMA are in no way responsible for its users or           **
**  applications created by its users, or damages caused by the environment     **
**  or programs made in the environment.                                        **
**                                                                              **
\********************************************************************************/

//This file was generated by the ENIGMA Development Environment.
//Editing it is a sign of a certain medical condition. We're not sure which one.

namespace enigma_user {
enum //object names
{
<<<<<<< HEAD
  obj_0 = 60,
  obj_1 = 61,
=======
  obj_0 = 0,
  obj_1 = 1,
>>>>>>> 32c0bb8... working
};
}
namespace enigma { size_t object_idmax = 62; }

namespace enigma_user {
string object_get_name(int i) {
 switch (i) {
<<<<<<< HEAD
    case 60: return "obj_0"; break;
    case 61: return "obj_1"; break;
=======
    case 0: return "obj_0"; break;
    case 1: return "obj_1"; break;
>>>>>>> 32c0bb8... working
 default: return "<undefined>";}};}

namespace enigma_user {
enum //sprite names
{
};}
namespace enigma { size_t sprite_idmax = 0; }

namespace enigma_user {
string sprite_get_name(int i) {
 switch (i) {
 default: return "<undefined>";}};}

namespace enigma_user {
enum //background names
{
};}
namespace enigma { size_t background_idmax = 0; }

namespace enigma_user {
string background_get_name(int i) {
 switch (i) {
 default: return "<undefined>";}};}

namespace enigma_user {
enum //font names
{
  EnigmaDefault = -1,
};}
namespace enigma { size_t font_idmax = 0; }

namespace enigma_user {
string font_get_name(int i) {
 switch (i) {
    case -1: return "EnigmaDefault"; break;
 default: return "<undefined>";}};}

namespace enigma_user {
enum //timeline names
{
};}
namespace enigma { size_t timeline_idmax = 0; }

namespace enigma_user {
string timeline_get_name(int i) {
 switch (i) {
 default: return "<undefined>";}};}

namespace enigma_user {
enum //path names
{
};}
namespace enigma { size_t path_idmax = 0; }

namespace enigma_user {
string path_get_name(int i) {
 switch (i) {
 default: return "<undefined>";}};}

namespace enigma_user {
enum //sound names
{
};}
namespace enigma { size_t sound_idmax = 0; }

namespace enigma_user {
string sound_get_name(int i) {
 switch (i) {
 default: return "<undefined>";}};}

namespace enigma_user {
enum //script names
{
};}
namespace enigma { size_t script_idmax = 0; }

namespace enigma_user {
string script_get_name(int i) {
 switch (i) {
 default: return "<undefined>";}};}

namespace enigma_user {
enum //shader names
{
};}
namespace enigma { size_t shader_idmax = 0; }

namespace enigma_user {
string shader_get_name(int i) {
 switch (i) {
 default: return "<undefined>";}};}

namespace enigma_user {
enum //room names
{
  rm_7 = 6,
};}
namespace enigma { size_t room_idmax = 7; }

